{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","helpers/getGits.js","Components/GifGrid.js","hooks/useFethGits.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","input","setInput","onSubmit","e","preventDefault","trim","length","cats","includes","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","categorias","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","imagenes","GitExpertApp","category","i","ReactDOM","render","document","getElementById"],"mappings":"mMAwCeA,EArCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACnB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OACI,sBAAMC,SAfW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAMK,OAAOC,OAAS,IACtBR,GAAc,SAAAS,GACV,OAAKA,EAAKC,SAASR,GAGR,YAAIO,GAFL,CAAGP,GAAT,mBAAkBO,OAK1BN,EAAS,MAIb,SACI,uBACIQ,KAAK,OACLC,MAAOV,EACPW,SAvBe,SAACR,GAExBF,EAASE,EAAES,OAAOF,a,QCLbG,EAAc,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEjC,OACI,sBAAKC,UAAU,2DAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,kCAAKA,S,uBCNJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,0DAC4CO,UAAUF,GADtD,sDAEAG,MAAMR,GAFN,cAEbS,EAFa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVvB,kBAcZY,GAdY,4CAAH,sDC8BLM,EAzBC,SAAC,GAAoB,IAAlBb,EAAiB,EAAjBA,WAIf,ECPwB,SAACA,GAEzB,MAA0BrB,mBAAS,CAC/B2B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAnBAC,qBAAU,WACNlB,EAAQC,GAAYkB,MAAK,SAAAT,GACrBU,YAAW,WAEPH,EAAS,CACLV,KAAMG,EACNK,SAAS,MAEd,UAER,CAACd,IASGe,EDlB0BK,CAAapB,GAAjCqB,EAAb,EAAQf,KAAeQ,EAAvB,EAAuBA,QAIvB,OACI,qCACI,oBAAIlB,UAAU,kBAAd,SAAiCI,IAC/Bc,GAAW,6CACb,qBAAKlB,UAAU,0BAAf,SAEQyB,EAASb,KAAI,SAAAC,GACT,OAAO,cAAC,EAAD,eACCA,GADiBA,EAAIC,aEWtCY,EA5BM,WAGjB,MAAoC3C,mBAAS,CAAC,cAA9C,mBAAOqB,EAAP,KAAmBtB,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQsB,EAAWQ,KAAI,SAACe,EAAUC,GAAX,OAAiB,cAAC,EAAD,CAEhCxB,WAAcuB,GADTA,Y,MCjBzBE,IAASC,OACR,cAAC,EAAD,IACCC,SAASC,eAAe,W","file":"static/js/main.3532c96c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategorias }) => {\r\n    const [input, setInput] = useState('');\r\n    const handleInputChangue = (e) => {\r\n\r\n        setInput(e.target.value);\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (input.trim().length > 2) {\r\n            setCategorias(cats => {\r\n                if (!cats.includes(input)) {\r\n                    return [ input,...cats];\r\n                } else {\r\n                    return [...cats];\r\n                }\r\n            });\r\n            setInput('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={input}\r\n                onChange={handleInputChangue}\r\n            />\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__bounce animate__delay-5s'>\r\n            <img src={url} alt={title}/>\r\n            <p> {title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async (categorias) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${encodeURI(categorias)}&api_key=eGeUnIK8RzlLPWfJWzV8FePFqk55QiYU`;\r\n    const resp = await fetch(url);\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n};","import React, { useState, useEffect } from 'react'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from '../hooks/useFethGits';\r\n\r\nconst GifGrid = ({ categorias }) => {\r\n\r\n\r\n \r\n    const { data:imagenes, loading} =useFetchGifs(categorias);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__fadeIn'>{categorias}</h3>\r\n             {loading && <p>'Cargando..'</p>} \r\n            <div className=\"card-grid animate__flip\">\r\n                {\r\n                    imagenes.map(img => {\r\n                        return <GifGridItem key={img.id}\r\n                            {...img} />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGits\";\r\n\r\nexport const useFetchGifs = (categorias) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(categorias).then(img => {\r\n            setTimeout(() => {\r\n\r\n                setState({\r\n                    data: img,\r\n                    loading: false\r\n                });\r\n            }, 3000);\r\n        })\r\n    }, [categorias]);\r\n\r\n    /*    setTimeout(()=>{\r\n           useState({\r\n               data:[1,23,4,5,6,7],\r\n               loading:false\r\n           });\r\n       },3000);\r\n     */\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport AddCategory from './Components/AddCategory';\r\nimport GifGrid from './Components/GifGrid';\r\n\r\nconst GitExpertApp = () => {\r\n\r\n\r\n    const [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n/*     const handleAdd = () => {\r\n\r\n        setCategorias([...categorias, 'x-men']);\r\n\r\n    }; */\r\n\r\n    return (\r\n        <>\r\n            <h2>GitExpertApp</h2>\r\n            <AddCategory setCategorias={setCategorias} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map((category, i) => <GifGrid \r\n                    key={category}\r\n                    categorias = {category}/>)\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GitExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GitExpertApp from './GitExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n <GitExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}